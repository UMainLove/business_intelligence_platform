name: Security Gate

permissions:
  contents: read
  security-events: write

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-gate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build container image
      run: |
        docker build -t security-test:${{ github.sha }} .
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: security-test:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Security Gate - Block deployment on critical/high vulnerabilities
      run: |
        echo "üîç Running security gate check..."
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          -v $PWD:/tmp aquasec/trivy image \
          --severity CRITICAL,HIGH \
          --exit-code 1 \
          --no-progress \
          security-test:${{ github.sha }}
        
        if [ $? -eq 0 ]; then
          echo "‚úÖ Security gate PASSED - No critical/high vulnerabilities found"
        else
          echo "‚ùå Security gate FAILED - Critical/high vulnerabilities detected"
          echo "üõë DEPLOYMENT BLOCKED - Fix vulnerabilities before deploying"
          exit 1
        fi