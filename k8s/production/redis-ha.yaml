apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-ha
  namespace: business-intelligence
spec:
  replicas: 3
  serviceName: redis-ha
  selector:
    matchLabels:
      app: redis-ha
  template:
    metadata:
      labels:
        app: redis-ha
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - redis-ha
            topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 999  # redis user in Alpine
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 999  # redis user in Alpine
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 6379
        command:
          - redis-server
        args:
          - --appendonly yes
          - --requirepass $(REDIS_PASSWORD)
          - --maxmemory 256mb
          - --maxmemory-policy allkeys-lru
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bi-secrets
              key: redis-password
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-tmp
          mountPath: /tmp
        readinessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: redis-tmp
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-ha
  namespace: business-intelligence
spec:
  clusterIP: None
  selector:
    app: redis-ha
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379