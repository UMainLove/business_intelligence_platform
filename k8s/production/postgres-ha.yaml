apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-ha
  namespace: business-intelligence
spec:
  replicas: 3
  serviceName: postgres-ha
  selector:
    matchLabels:
      app: postgres-ha
  template:
    metadata:
      labels:
        app: postgres-ha
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - postgres-ha
            topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 999  # postgres user in Debian
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:14
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 999  # postgres user in Debian
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: business_intelligence
        - name: POSTGRES_USER
          value: bi_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bi-secrets
              key: postgres-password
        - name: POSTGRES_REPLICATION_MODE
          value: master
        - name: POSTGRES_REPLICATION_USER
          value: replicator
        - name: POSTGRES_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bi-secrets
              key: replication-password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-tmp
          mountPath: /tmp
        - name: postgres-run
          mountPath: /var/run/postgresql
        readinessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 60
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: postgres-tmp
        emptyDir: {}
      - name: postgres-run
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-ha
  namespace: business-intelligence
spec:
  clusterIP: None
  selector:
    app: postgres-ha
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432