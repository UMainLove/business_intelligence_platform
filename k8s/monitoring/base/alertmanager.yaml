apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: '{{ env "EMAIL_SMTP_HOST" }}'
      smtp_from: '{{ env "EMAIL_FROM_ADDRESS" }}'
      slack_api_url: '{{ env "SLACK_WEBHOOK_URL" }}'

    route:
      group_by: ['alertname', 'severity']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
        - match:
            severity: critical
          receiver: 'critical-alerts'
        - match:
            severity: warning
          receiver: 'warning-alerts'

    receivers:
      - name: 'web.hook'
        webhook_configs:
          - url: 'http://webhook-service:5000/alerts'
            send_resolved: true

      - name: 'critical-alerts'
        email_configs:
          - to: 'admin@bi-platform.com'
            subject: 'CRITICAL: {{ .GroupLabels.alertname }}'
            body: |
              {{ range .Alerts }}
              Alert: {{ .Annotations.summary }}
              Instance: {{ .Labels.instance }}
              Severity: {{ .Labels.severity }}
              {{ end }}
        slack_configs:
          - channel: '#alerts-critical'
            title: 'Critical Alert - {{ .GroupLabels.alertname }}'
            text: |
              {{ range .Alerts }}
              • {{ .Annotations.summary }}
              • Instance: {{ .Labels.instance }}
              {{ end }}

      - name: 'warning-alerts'
        email_configs:
          - to: 'team@bi-platform.com'
            subject: 'WARNING: {{ .GroupLabels.alertname }}'
            body: |
              {{ range .Alerts }}
              Alert: {{ .Annotations.summary }}
              Instance: {{ .Labels.instance }}
              Severity: {{ .Labels.severity }}
              {{ end }}

    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'dev', 'instance']

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: alertmanager
spec:
  replicas: 2  # High availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534  # nobody user
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alertmanager
              topologyKey: kubernetes.io/hostname
      priorityClassName: high-priority
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.25.0
          imagePullPolicy: IfNotPresent
          args:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--storage.path=/alertmanager'
            - '--data.retention=$(ALERT_RETENTION)'
            - '--web.external-url=http://alertmanager.monitoring:9093'
            - '--web.route-prefix=/'
            - '--cluster.listen-address=0.0.0.0:9094'
            - '--log.level=$(LOG_LEVEL)'
          ports:
            - name: http
              containerPort: 9093
              protocol: TCP
            - name: mesh
              containerPort: 9094
              protocol: TCP
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: monitoring-env-config
                  key: ENVIRONMENT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: monitoring-env-config
                  key: LOG_LEVEL
            - name: ALERT_RETENTION
              valueFrom:
                configMapKeyRef:
                  name: monitoring-config
                  key: alertmanager.retention
            - name: EMAIL_SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: monitoring-env-config
                  key: EMAIL_SMTP_HOST
            - name: EMAIL_FROM_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: monitoring-env-config
                  key: EMAIL_FROM_ADDRESS
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: monitoring-secrets
                  key: slack-webhook-url
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
              ephemeral-storage: 200Mi
            limits:
              memory: 512Mi
              cpu: 500m
              ephemeral-storage: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            capabilities:
              drop:
              - ALL
          volumeMounts:
            - name: alertmanager-config
              mountPath: /etc/alertmanager/
              readOnly: true
            - name: alertmanager-storage
              mountPath: /alertmanager/
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9093
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9093
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: alertmanager-config
          configMap:
            name: alertmanager-config
            defaultMode: 0444
        - name: alertmanager-storage
          persistentVolumeClaim:
            claimName: alertmanager-storage
        - name: tmp
          emptyDir: {}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: alertmanager
spec:
  type: ClusterIP
  ports:
    - port: 9093
      targetPort: 9093
      name: http
    - port: 9094
      targetPort: 9094
      name: cluster
  selector:
    app: alertmanager

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-storage
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: alertmanager.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: alertmanager
                port:
                  number: 9093