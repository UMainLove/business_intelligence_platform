apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: monitoring
  labels:
    app: monitoring
    component: configuration
data:
  # Prometheus Configuration
  prometheus.retention.time: "30d"
  prometheus.retention.size: "100GB"
  prometheus.scrape.interval: "15s"
  prometheus.evaluation.interval: "15s"
  prometheus.query.max_concurrency: "20"
  prometheus.query.timeout: "2m"
  prometheus.log.level: "info"
  prometheus.external.url: "http://prometheus.monitoring:9090"
  prometheus.replicas: "2"
  
  # Grafana Configuration
  grafana.server.root_url: "http://grafana.monitoring:3000"
  grafana.log.level: "info"
  grafana.analytics.reporting_enabled: "false"
  grafana.analytics.check_for_updates: "false"
  grafana.users.allow_sign_up: "false"
  grafana.auth.anonymous.enabled: "false"
  grafana.auth.basic.enabled: "true"
  grafana.replicas: "2"
  
  # AlertManager Configuration
  alertmanager.retention: "120h"
  alertmanager.cpu.request: "50m"
  alertmanager.memory.request: "128Mi"
  alertmanager.replicas: "2"
  
  # Monitoring Targets
  monitoring.namespace: "monitoring"
  target.namespace: "business-intelligence"
  
  # Storage Configuration
  storage.class: "fast"
  prometheus.storage.size: "100Gi"
  grafana.storage.size: "10Gi"
  alertmanager.storage.size: "5Gi"
  
  # Resource Limits
  prometheus.cpu.limit: "2000m"
  prometheus.memory.limit: "4Gi"
  grafana.cpu.limit: "1000m"
  grafana.memory.limit: "2Gi"
  alertmanager.cpu.limit: "500m"
  alertmanager.memory.limit: "512Mi"
  
  # Network Configuration
  prometheus.port: "9090"
  grafana.port: "3000"
  alertmanager.port: "9093"
  
  # Feature Flags
  enable.high_availability: "true"
  enable.network_policies: "true"
  enable.pod_security_policies: "true"
  enable.service_monitors: "true"
  enable.prometheus_rules: "true"