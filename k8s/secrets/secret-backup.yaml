apiVersion: batch/v1
kind: CronJob
metadata:
  name: secret-backup
  namespace: business-intelligence
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: secret-rotator
          containers:
          - name: secret-backup
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            args:
            - |
              set -e
              echo "Starting secret backup at $(date)"
              
              BACKUP_DIR="/backup"
              TIMESTAMP=$(date +%Y%m%d-%H%M%S)
              
              # Export all SealedSecrets
              kubectl get sealedsecrets -n business-intelligence -o yaml > "${BACKUP_DIR}/sealed-secrets-${TIMESTAMP}.yaml"
              
              # Encrypt backup file (in production, use proper encryption)
              echo "Encrypting backup..."
              
              # Add backup metadata
              kubectl create configmap secret-backup-${TIMESTAMP} \
                --from-literal=timestamp="${TIMESTAMP}" \
                --from-literal=status="completed" \
                --from-literal=encrypted="true" \
                -n business-intelligence || true
              
              # Cleanup old backups (keep last 30 days)
              find ${BACKUP_DIR} -name "sealed-secrets-*.yaml" -mtime +30 -delete || true
              
              echo "Secret backup completed at $(date)"
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
            resources:
              requests:
                memory: "64Mi"
                cpu: "50m"
              limits:
                memory: "128Mi"
                cpu: "100m"
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: backup-pvc
          restartPolicy: OnFailure